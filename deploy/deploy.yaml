apiVersion: v1
kind: ServiceAccount
metadata:
  name: parapet-ingress-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: parapet-ingress-controller
rules:
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: parapet-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: parapet-ingress-controller
subjects:
- kind: ServiceAccount
  name: parapet-ingress-controller
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: parapet-ingress-controller
  name: parapet-ingress-controller
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: parapet-ingress-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: parapet-ingress-controller
  name: parapet-ingress-controller
spec:
  replicas: 2
  selector:
    matchLabels:
      app: parapet-ingress-controller
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: parapet-ingress-controller
      name: parapet-ingress-controller
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - parapet-ingress-controller
            topologyKey: kubernetes.io/hostname
      serviceAccountName: parapet-ingress-controller
      containers:
      - name: parapet-ingress-controller
        image: gcr.io/moonrhythm-containers/parapet-ingress-controller:v0.1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
      terminationGracePeriodSeconds: 60
